{"version":3,"sources":["components/Helpers/PageNavLink.tsx","components/NavBar.tsx","App.tsx","pages/NotFoundPage.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/Helpers/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","index.tsx"],"names":["PageNavLink","memo","to","text","className","isActive","cn","NavBar","role","App","NotFoundPage","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","sex","slug","name","headers","id","title","PeopleTable","people","useParams","map","header","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","isPeopleLoaded","setIsPeopleLoaded","useEffect","PeopleFromServer","peopleWithParents","find","mom","f","catch","finally","hasNoPeople","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.fe9f31d8.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = memo(({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n));\n","import React, { memo } from 'react';\nimport { PageNavLink } from './Helpers/PageNavLink';\n\nexport const NavBar: React.FC = memo(() => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n});\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React, { memo } from 'react';\n\nexport const NotFoundPage: React.FC = memo(() => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n});\n","import React, { memo } from 'react';\n\nexport const HomePage: React.FC = memo(() => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n});\n","import React, { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import cn from 'classnames';\nimport { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = memo(({ person }) => (\n  <Link\n    className={cn({\n      'has-text-danger': person.sex === 'f',\n\n    })}\n    to={person.slug}\n  >\n    {person.name}\n  </Link>\n));\n","import cn from 'classnames';\nimport { memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './Helpers/PersonLink';\n\ninterface Props {\n  people: Person[],\n}\n\nconst headers = [\n  { id: 1, title: 'Name' },\n  { id: 2, title: 'Sex' },\n  { id: 3, title: 'Born' },\n  { id: 4, title: 'Died' },\n  { id: 5, title: 'Mother' },\n  { id: 6, title: 'Father' },\n];\n\nexport const PeopleTable: React.FC<Props> = memo(({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {headers.map(header => <th key={header.id}>{header.title}</th>)}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={(cn({\n              'has-background-warning': person.slug === slug,\n            }))}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, { memo, useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage: React.FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [isPeopleLoaded, setIsPeopleLoaded] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((PeopleFromServer) => {\n        const peopleWithParents: Person[] = PeopleFromServer.map(person => {\n          const mother = PeopleFromServer\n            .find(mom => mom.name === person.motherName);\n          const father = PeopleFromServer\n            .find(f => f.name === person.fatherName);\n\n          return {\n            ...person,\n            mother,\n            father,\n          };\n        });\n\n        setPeople(peopleWithParents);\n        setIsPeopleLoaded(true);\n      })\n      .catch(() => setErrorMessage(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const hasNoPeople = !people.length && isPeopleLoaded;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n          {hasNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length !== 0 && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n});\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}